<?php
/**
 * ObjsTeamTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Slack Web API
 *
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.1.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client;

use PHPUnit\Framework\TestCase;

/**
 * ObjsTeamTest Class Doc Comment
 *
 * @category    Class
 * @description ObjsTeam
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ObjsTeamTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "ObjsTeam"
     */
    public function testObjsTeam()
    {
    }

    /**
     * Test attribute "archived"
     */
    public function testPropertyArchived()
    {
    }

    /**
     * Test attribute "avatar_base_url"
     */
    public function testPropertyAvatarBaseUrl()
    {
    }

    /**
     * Test attribute "created"
     */
    public function testPropertyCreated()
    {
    }

    /**
     * Test attribute "date_create"
     */
    public function testPropertyDateCreate()
    {
    }

    /**
     * Test attribute "deleted"
     */
    public function testPropertyDeleted()
    {
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
    }

    /**
     * Test attribute "discoverable"
     */
    public function testPropertyDiscoverable()
    {
    }

    /**
     * Test attribute "domain"
     */
    public function testPropertyDomain()
    {
    }

    /**
     * Test attribute "email_domain"
     */
    public function testPropertyEmailDomain()
    {
    }

    /**
     * Test attribute "enterprise_id"
     */
    public function testPropertyEnterpriseId()
    {
    }

    /**
     * Test attribute "enterprise_name"
     */
    public function testPropertyEnterpriseName()
    {
    }

    /**
     * Test attribute "has_compliance_export"
     */
    public function testPropertyHasComplianceExport()
    {
    }

    /**
     * Test attribute "icon"
     */
    public function testPropertyIcon()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "is_assigned"
     */
    public function testPropertyIsAssigned()
    {
    }

    /**
     * Test attribute "is_enterprise"
     */
    public function testPropertyIsEnterprise()
    {
    }

    /**
     * Test attribute "limit_ts"
     */
    public function testPropertyLimitTs()
    {
    }

    /**
     * Test attribute "messages_count"
     */
    public function testPropertyMessagesCount()
    {
    }

    /**
     * Test attribute "msg_edit_window_mins"
     */
    public function testPropertyMsgEditWindowMins()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "over_integrations_limit"
     */
    public function testPropertyOverIntegrationsLimit()
    {
    }

    /**
     * Test attribute "over_storage_limit"
     */
    public function testPropertyOverStorageLimit()
    {
    }

    /**
     * Test attribute "plan"
     */
    public function testPropertyPlan()
    {
    }
}
